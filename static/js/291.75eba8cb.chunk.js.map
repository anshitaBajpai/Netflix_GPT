{"version":3,"file":"static/js/291.75eba8cb.chunk.js","mappings":"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","sources":["hooks/useTrending.js","pages/Browse.js","stores/trendingSlice.js"],"sourcesContent":["import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { TMDB_API_URL, TMDB_OPTIONS } from \"../services/tmdb\";\r\nimport { setTrending } from '../stores/trendingSlice';\r\n\r\n\r\nconst useTrending = (endpoint, trendingType, genreId, originalLanguage) => {\r\n  const dispatch = useDispatch();\r\n  const trendingData = useSelector((store) => store.trendings[trendingType]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        let apiUrl = `${TMDB_API_URL}/trending/${endpoint}?language=en-US`;\r\n\r\n        if (genreId) {\r\n          apiUrl += `&with_genres=${genreId}`;\r\n        }\r\n\r\n        if (originalLanguage) {\r\n          apiUrl += `&with_original_language=${originalLanguage}`;\r\n        }\r\n        const response = await fetch(apiUrl, TMDB_OPTIONS);\r\n        const result = await response.json();\r\n        dispatch(setTrending({ trendingType, trendingData: result }));\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    if (!trendingData) {\r\n      fetchData();\r\n    }\r\n  }, [dispatch, endpoint, trendingType, genreId, originalLanguage, trendingData]);\r\n};\r\n\r\nexport default useTrending;\r\n","import ShowCase from '../components/ShowCase';\r\nimport MovieSlider from '../components/MovieSlider';\r\nimport useMovie from '../hooks/useMovie';\r\nimport useTrending from '../hooks/useTrending';\r\nimport { SHOWCASE, TRENDINGS, MOVIES } from '../services/tmdb';\r\nimport { useSelector } from 'react-redux';\r\nimport useShowCase from '../hooks/useShowCase';\r\nimport ShowcaseShimmer from '../components/ShowCaseShimmer';\r\nimport MovieSliderShimmer from '../components/MovieSliderShimmer';\r\n\r\nconst Browse = () => {\r\n  const { landingPage } = SHOWCASE;\r\n  const { trendingAll, trendingTv, trendingMovies } = TRENDINGS;\r\n  const { nowPlaying, popular, topRated } = MOVIES;\r\n\r\n\r\n\r\n  useShowCase(landingPage.endpoint, landingPage.type, null, 'en', 19);\r\n\r\n  useTrending(trendingAll.endpoint, trendingAll.type);\r\n  useTrending(trendingTv.endpoint, trendingTv.type);\r\n  useTrending(trendingMovies.endpoint, trendingMovies.type);\r\n\r\n  useMovie(nowPlaying.endpoint, nowPlaying.type);\r\n  useMovie(topRated.endpoint, topRated.type);\r\n  useMovie(popular.endpoint, popular.type);\r\n  useMovie(popular.endpoint, 'bollywood', null, 'hi');\r\n\r\n\r\n\r\n  const showCase = useSelector((store) => store?.showCase?.landingPage);\r\n  const trendings = useSelector((store) => store?.trendings);\r\n  const movies = useSelector((store) => store?.movies);\r\n\r\n  return (\r\n    <div className='broswe-page'>\r\n      {showCase ? <ShowCase data={showCase} /> : <ShowcaseShimmer />}\r\n      <div className='moview-by-type px-4 md:px-12 md:mt-[-10%] xl:mt-[-15%] z-50 relative'>\r\n        {\r\n          movies.nowPlaying ? (\r\n            <MovieSlider type={null} heading=\"Now Playing\" data={movies.nowPlaying} />\r\n          ) : (\r\n            <MovieSliderShimmer dimention={'w-28 md:w-36'} />\r\n          )\r\n        }\r\n\r\n        {\r\n          trendings.trendingMovies ? (\r\n            <MovieSlider\r\n              type=\"trending\"\r\n              heading=\"Top 10 Trending Movies\"\r\n              data={trendings.trendingMovies}\r\n            />\r\n          ) : (\r\n            <MovieSliderShimmer dimention={'w-52 h-[200px]'} />\r\n          )\r\n        }\r\n\r\n        {\r\n          movies.bollywood ? (\r\n            <MovieSlider type={null} heading=\"Now Playing Bollywood Movies\" data={movies.bollywood} />\r\n          ) : (\r\n            <MovieSliderShimmer dimention={'w-28 md:w-36'} />\r\n          )\r\n        }\r\n\r\n        {\r\n          movies.topRated ? (\r\n            <MovieSlider type={null} heading=\"Top Rated Movies\" data={movies.topRated} />\r\n          ) : (\r\n            <MovieSliderShimmer dimention={'w-28 md:w-36'} />\r\n          )\r\n        }\r\n\r\n        {\r\n          trendings.trendingTv ? (\r\n            <MovieSlider type=\"trending\" heading=\"Top 10 TV Shows in India\" data={trendings.trendingTv} />\r\n          ) : (\r\n            <MovieSliderShimmer dimention={'w-52 h-[200px]'} />\r\n          )\r\n        }\r\n\r\n        {\r\n          movies.popular ? (\r\n            <MovieSlider type={null} heading=\"Popular Movies\" data={movies.popular} />\r\n          ) : (\r\n            <MovieSliderShimmer dimention={'w-28 md:w-36'} />\r\n          )\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Browse;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst trandingSlice = createSlice({\r\n  name: 'trendings',\r\n  initialState: {\r\n    trendingAll: null,\r\n    trendingMovies: null,\r\n    trendingTv: null,\r\n    trendingIndia: null,\r\n  },\r\n  reducers: {\r\n    setTrending: (state, action) => {\r\n      const { trendingType, trendingData } = action.payload;\r\n      const filterTopTen = {\r\n        page: trendingData.page,\r\n        results: trendingData.results.slice(0, 10)\r\n      }\r\n      state[trendingType] = filterTopTen;\r\n    }\r\n  }\r\n});\r\n\r\n\r\nexport const { setTrending } = trandingSlice.actions;\r\nexport default trandingSlice.reducer;\r\n"],"names":["useTrending","endpoint","trendingType","genreId","originalLanguage","dispatch","useDispatch","trendingData","useSelector","store","trendings","useEffect","async","apiUrl","concat","TMDB_API_URL","response","fetch","TMDB_OPTIONS","result","json","setTrending","error","console","fetchData","Browse","landingPage","SHOWCASE","trendingAll","trendingTv","trendingMovies","TRENDINGS","nowPlaying","popular","topRated","MOVIES","useShowCase","type","useMovie","showCase","_store$showCase","movies","_jsxs","className","children","_jsx","ShowCase","data","ShowcaseShimmer","MovieSlider","heading","MovieSliderShimmer","dimention","bollywood","trandingSlice","createSlice","name","initialState","trendingIndia","reducers","state","action","payload","filterTopTen","page","results","slice","actions"],"sourceRoot":""}