{"version":3,"file":"static/js/937.a022fa39.chunk.js","mappings":"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","sources":["auth/register.js","components/SignUpForm.js","pages/SignUp.js","services/firebase.js","stores/userSlice.js","validator/validate.js"],"sourcesContent":["import { createUserWithEmailAndPassword } from \"firebase/auth\";\r\nimport { auth } from \"../services/firebase\";\r\n\r\nconst register = async (email, password) => {\r\n  const response = {};\r\n  try {\r\n    const userCredential = await createUserWithEmailAndPassword(auth, email, password);\r\n    const user = userCredential.user;\r\n    response.user = user;\r\n  } catch (error) {\r\n    response.error = error;\r\n  }\r\n  return response;\r\n}\r\n\r\nexport default register;\r\n","import { useState, useRef } from \"react\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from \"react-router-dom\";\r\nimport register from \"../auth/register\";\r\nimport { PAGE } from \"../router/routes\";\r\nimport validate from \"../validator/validate\";\r\nimport { addUser } from \"../stores/userSlice\";\r\n\r\nconst SignUpForm = () => {\r\n  const [loadingBtn, setLoadingBtn] = useState(false);\r\n  const [authError, setAuthError] = useState(null);\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n  const dispatch = useDispatch();\r\n  const emailPhone = useRef(null);\r\n  const password = useRef(null);\r\n  const confirmPassword = useRef(null);\r\n\r\n  const handleSignUp = async () => {\r\n    // Client side validation\r\n    const isError = validate(\r\n      emailPhone.current.value,\r\n      password.current.value,\r\n      confirmPassword.current.value\r\n    );\r\n    setErrorMessage(isError);\r\n    if (isError) return;\r\n    setLoadingBtn(true);\r\n\r\n    // Send provided credential to server for validation\r\n    const userCredential = await register(emailPhone.current.value, password.current.value);\r\n    let errorMessage = null;\r\n    switch (userCredential?.error?.code) {\r\n      case \"auth/email-already-in-use\":\r\n        errorMessage = \"Email you provided is already registered.\"\r\n        break;\r\n\r\n      default:\r\n        errorMessage = \"Something went wrong with your credentials.\"\r\n        break;\r\n    }\r\n    setAuthError(errorMessage);\r\n    setLoadingBtn(false);\r\n\r\n    if (userCredential?.error) return;\r\n\r\n    const { uid, displayName, email, photoURL, phoneNumber } = userCredential.user;\r\n    dispatch(addUser({\r\n      uid: uid,\r\n      displayName: displayName,\r\n      photoURL: photoURL,\r\n      email: email,\r\n      phoneNumber: phoneNumber\r\n    }));\r\n  }\r\n\r\n  return (\r\n    <div className='bg-black/70 w-full sm:w-[450px] m-auto px-6 md:px-16 py-8 md:py-12 mx-4 sm:mx-auto flex items-center rounded-lg'>\r\n      <div className=\"w-full\">\r\n        <h1 className=\"mb-5 text-white text-3xl\">Sign Up</h1>\r\n        {authError && (\r\n          <div className=\"p-3 bg-[#e87c03] text-white text-xs rounded-md mb-5\">{authError}</div>\r\n        )}\r\n        <div className=\"mb-2 text-white\">\r\n          <input type=\"text\" ref={emailPhone} placeholder=\"Enter Email\" className={`px-4 py-4 w-full bg-[#333] border-b-2 rounded-[4px] focus:bg-[#4d4c4c] focus-visible:outline-none text-sm ${errorMessage?.emailPhone ? 'border-[#e87c03]' : 'border-transparent'}`} />\r\n          <div className=\"error px-1 py-2 text-[#e87c03] text-xs\">{errorMessage?.emailPhone}</div>\r\n        </div>\r\n        <div className=\"mb-2 text-white\">\r\n          <input type=\"password\" ref={password} placeholder=\"Set Password\" className={`px-4 py-4 w-full bg-[#333] border-b-2 rounded-[4px] focus:bg-[#4d4c4c] focus-visible:outline-none text-sm ${errorMessage?.password ? 'border-[#e87c03]' : 'border-transparent'}`} />\r\n          <div className=\"error px-1 py-2 text-[#e87c03] text-xs\">{errorMessage?.password}</div>\r\n        </div>\r\n        <div className=\"mb-2 text-white\">\r\n          <input type=\"password\" ref={confirmPassword} placeholder=\"Confirm Password\" className={`px-4 py-4 w-full bg-[#333] border-b-2 rounded-[4px] focus:bg-[#4d4c4c] focus-visible:outline-none text-sm ${errorMessage?.confirmPassword ? 'border-[#e87c03]' : 'border-transparent'}`} />\r\n          <div className=\"error px-1 py-2 text-[#e87c03] text-xs\">{errorMessage?.confirmPassword}</div>\r\n        </div>\r\n        <div className=\"my-2\">\r\n          <button onClick={handleSignUp} disabled={loadingBtn ? true : false} className=\"flex items-center justify-center px-4 py-3 mt-4 bg-red-primary text-white w-full rounded-[4px] disabled:bg-red-800\">\r\n            {\r\n              loadingBtn ? <div className=\"w-5 h-5 border-t m-[2px] border-gray-300 border-solid rounded-full animate-spin\"></div> : 'Sign Up'\r\n            }\r\n          </button>\r\n        </div>\r\n        <div className=\"text-md mt-8 flex items-center gap-2\">\r\n          <span className='text-sm'>\r\n            Already have an Account?\r\n          </span>\r\n          <Link to={PAGE.SIGNIN} className='text-white text-sm hover:underline'>Sign in now</Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignUpForm;\r\n","import SignUpForm from \"../components/SignUpForm\";\r\nimport { POSTER_BG } from \"../utils/constants\";\r\n\r\nconst Registration = () => {\r\n  return (\r\n    <div className=\"relative text-gray-500 min-h-screen\">\r\n      <div className=\"absolute -z-[1] min-h-screenf h-full\">\r\n        <img src={POSTER_BG} alt=\"NetflixGPT\" className=\"w-screen h-full object-cover\" />\r\n      </div>\r\n      <div className=\"flex items-center min-h-screen bg-black/60\">\r\n        <SignUpForm />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Registration;\r\n","import { getAuth } from \"firebase/auth\";\r\n// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAnalytics } from \"firebase/analytics\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyC_6XxavwSR0UP9DAK5If224D0RkJRxQXE\",\r\n  authDomain: \"netflixgpt-1c13a.firebaseapp.com\",\r\n  projectId: \"netflixgpt-1c13a\",\r\n  storageBucket: \"netflixgpt-1c13a.firebasestorage.app\",\r\n  messagingSenderId: \"50367864066\",\r\n  appId: \"1:50367864066:web:ea050986dbecd90710361b\",\r\n  measurementId: \"G-Y7D76GEPCW\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst analytics = getAnalytics(app);\r\n\r\n export const auth = getAuth();","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userSlice = createSlice({\r\n  name: 'user',\r\n  // initialState: null,\r\n  initialState: null,\r\n  reducers: {\r\n    addUser: (state, action) => {\r\n      return action.payload\r\n    },\r\n    updateUser: (state, action) => {\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      };\r\n    },\r\n    removeUser: (state, action) => {\r\n      return null\r\n    }\r\n  }\r\n});\r\n\r\nexport const { addUser, updateUser, removeUser } = userSlice.actions;\r\nexport default userSlice.reducer;\r\n\r\n","const validate = (emailPhone, password, confirmPassword) => {\r\n  const errors = {};\r\n\r\n  const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n  const phoneRegex = /^[0-9]{10}$/;\r\n\r\n  if (!emailRegex.test(emailPhone) && !phoneRegex.test(emailPhone)) {\r\n    errors.emailPhone = 'Please enter a valid email address or phone number.';\r\n  }\r\n\r\n  if (!password) {\r\n    errors.password = 'Password password cannot be empty.';\r\n  } else {\r\n    if (password.length < 8 || password.length > 16) {\r\n      errors.password = 'Password must be between 8 and 16 characters.';\r\n    }\r\n    if (!/(?=.*[a-z])/.test(password)) {\r\n      errors.password = 'Password must contain at least one lowercase letter.';\r\n    }\r\n    if (!/(?=.*[A-Z])/.test(password)) {\r\n      errors.password = 'Password must contain at least one uppercase letter.';\r\n    }\r\n    if (!/(?=.*\\d)/.test(password)) {\r\n      errors.password = 'Password must contain at least one digit.';\r\n    }\r\n  }\r\n\r\n  if (confirmPassword !== undefined) {\r\n    const trimmedConfirmPassword = confirmPassword.trim();\r\n    if (trimmedConfirmPassword === '') {\r\n      errors.confirmPassword = 'Confirm password cannot be empty.';\r\n    } else if (trimmedConfirmPassword !== password) {\r\n      errors.confirmPassword = 'Passwords do not match.';\r\n    }\r\n  }\r\n\r\n  return Object.keys(errors).length === 0 ? null : errors;\r\n}\r\n\r\nexport default validate;\r\n"],"names":["async","email","password","response","user","createUserWithEmailAndPassword","auth","error","SignUpForm","loadingBtn","setLoadingBtn","useState","authError","setAuthError","errorMessage","setErrorMessage","dispatch","useDispatch","emailPhone","useRef","confirmPassword","_jsx","className","children","_jsxs","type","ref","placeholder","concat","onClick","_userCredential$error","isError","validate","current","value","userCredential","register","code","uid","displayName","photoURL","phoneNumber","addUser","disabled","Link","to","PAGE","SIGNIN","Registration","src","POSTER_BG","alt","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getAnalytics","getAuth","userSlice","createSlice","name","initialState","reducers","state","action","payload","updateUser","_objectSpread","removeUser","actions","errors","test","length","undefined","trimmedConfirmPassword","trim","Object","keys"],"sourceRoot":""}