{"version":3,"file":"static/js/700.1c40c41a.chunk.js","mappings":"uMAGA,MAYA,EAZqBA,MAAOC,EAAOC,KACjC,MAAMC,EAAW,CAAC,EAClB,IACE,MACMC,SADuBC,EAAAA,EAAAA,IAA2BC,EAAAA,KAAML,EAAOC,IACzCE,KAC5BD,EAASC,KAAOA,CAClB,CAAE,MAAOG,GACPJ,EAASI,MAAQA,CACnB,CACA,OAAOJ,CAAQ,E,aCNjB,MA8FA,EA9FmBK,KACjB,MAAOC,EAAYC,IAAiBC,EAAAA,EAAAA,WAAS,IACtCC,EAAWC,IAAgBF,EAAAA,EAAAA,UAAS,OACpCG,EAAcC,IAAmBJ,EAAAA,EAAAA,UAAS,OAE1CK,EAAYC,IAAiBN,EAAAA,EAAAA,UAAS,qBACtCT,EAAUgB,IAAeP,EAAAA,EAAAA,UAAS,eACnCQ,GAAWC,EAAAA,EAAAA,MA2CjB,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kHAAiHC,UAC9HC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,SAAQC,SAAA,EACrBF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,2BAA0BC,SAAC,YACxCX,IACCS,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sDAAqDC,SAAEX,KAExEY,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kBAAiBC,SAAA,EAC9BF,EAAAA,EAAAA,KAAA,SAAOI,KAAK,OAAOC,MAAOV,EAAYW,SAjDpBC,IACxBX,EAAcW,EAAMC,OAAOH,MAAM,EAgDuCI,YAAY,cAAcC,aAAa,WAAWT,UAAS,wHAAAU,OAAsI,OAAZlB,QAAY,IAAZA,GAAAA,EAAcE,WAAa,mBAAqB,yBACvSK,EAAAA,EAAAA,KAAA,OAAKC,UAAU,yCAAwCC,SAAc,OAAZT,QAAY,IAAZA,OAAY,EAAZA,EAAcE,iBAEzEQ,EAAAA,EAAAA,MAAA,QAAMS,SAAWC,GAAMA,EAAEC,iBAAiBZ,SAAA,EACxCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kBAAiBC,SAAA,EAC9BF,EAAAA,EAAAA,KAAA,SAAOI,KAAK,WAAWC,MAAOxB,EAAUyB,SAlD1BC,IACtBV,EAAYU,EAAMC,OAAOH,MAAM,EAiD2CI,YAAY,WAAWC,aAAa,WAAWT,UAAS,wHAAAU,OAAsI,OAAZlB,QAAY,IAAZA,GAAAA,EAAcZ,SAAW,mBAAqB,yBAClSmB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,yCAAwCC,SAAc,OAAZT,QAAY,IAAZA,OAAY,EAAZA,EAAcZ,eAEzEmB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMC,UACnBF,EAAAA,EAAAA,KAAA,UAAQe,QAlDGpC,UAAa,IAADqC,EAE/B,MAAMC,GAAUC,EAAAA,EAAAA,GACdvB,EACAd,GAGF,GADAa,EAAgBuB,GACZA,EAAS,OACb5B,GAAc,GAGd,MAAM8B,QAAuBC,EAAazB,EAAYd,GACtD,IAAIY,EAAe,KACnB,OAAsB,OAAd0B,QAAc,IAAdA,GAAqB,QAAPH,EAAdG,EAAgBjC,aAAK,IAAA8B,OAAP,EAAdA,EAAuBK,MAC7B,IAAK,qBACH5B,EAAe,kCACf,MAEF,IAAK,iCACHA,EAAe,6BACf,MAEF,QACEA,EAAe,8CAGnBD,EAAaC,GACbJ,GAAc,GAEI,OAAd8B,QAAc,IAAdA,GAAAA,EAAgBjC,OACpBY,EAASwB,EAAAA,EAAKC,OAAO,EAoBkBC,WAAUpC,EAA2Ba,UAAU,qHAAoHC,SAE9Ld,GAAaY,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oFAA2F,kBAK/HE,EAAAA,EAAAA,MAAA,OAAKF,UAAU,yCAAwCC,SAAA,EACrDC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,0BAAyBC,SAAA,EACtCF,EAAAA,EAAAA,KAAA,SAAOyB,GAAG,gBAAgBrB,KAAK,WAAWH,UAAU,uLACpDD,EAAAA,EAAAA,KAAA,SAAO0B,QAAQ,gBAAgBzB,UAAU,yBAAwBC,SAAC,0BAEpEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMC,UACnBF,EAAAA,EAAAA,KAAA,KAAG2B,KAAK,KAAK1B,UAAU,0BAAyBC,SAAC,qBAGrDC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,uCAAsCC,SAAA,EACnDF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,UAASC,SAAC,wBAG1BF,EAAAA,EAAAA,KAAC4B,EAAAA,GAAI,CAACC,GAAIP,EAAAA,EAAKQ,OAAQ7B,UAAU,qCAAoCC,SAAC,uBAGrE,E,cC7FX,MAaA,EAbe6B,KAEX5B,EAAAA,EAAAA,MAAA,OAAKF,UAAU,sCAAqCC,SAAA,EAClDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uCAAsCC,UACnDF,EAAAA,EAAAA,KAAA,OAAKgC,IAAKC,EAAAA,GAAWC,IAAI,aAAajC,UAAU,oCAElDD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,6CAA4CC,UACzDF,EAAAA,EAAAA,KAACmC,EAAU,Q,uECDnB,MAWMC,GAAMC,EAAAA,EAAAA,IAXW,CACrBC,OAAQ,0CACRC,WAAY,mCACZC,UAAW,mBACXC,cAAe,uCACfC,kBAAmB,cACnBC,MAAO,2CACPC,cAAe,iBAOH3D,IAFI4D,EAAAA,EAAAA,IAAaT,IAEVU,EAAAA,EAAAA,M,kCCvBrB,MAuCA,EAvCiB5B,CAACvB,EAAYd,EAAUkE,KACtC,MAAMC,EAAS,CAAC,EA0BhB,GAxBmB,mDAGHC,KAAKtD,IAFF,cAE6BsD,KAAKtD,KACnDqD,EAAOrD,WAAa,uDAGjBd,IAGCA,EAASqE,OAAS,GAAKrE,EAASqE,OAAS,MAC3CF,EAAOnE,SAAW,iDAEf,cAAcoE,KAAKpE,KACtBmE,EAAOnE,SAAW,wDAEf,cAAcoE,KAAKpE,KACtBmE,EAAOnE,SAAW,wDAEf,WAAWoE,KAAKpE,KACnBmE,EAAOnE,SAAW,8CAZpBmE,EAAOnE,SAAW,0CAgBIsE,IAApBJ,EAA+B,CACjC,MAAMK,EAAyBL,EAAgBM,OAChB,KAA3BD,EACFJ,EAAOD,gBAAkB,oCAChBK,IAA2BvE,IACpCmE,EAAOD,gBAAkB,0BAE7B,CAEA,OAAsC,IAA/BO,OAAOC,KAAKP,GAAQE,OAAe,KAAOF,CAAM,C","sources":["auth/authenticate.js","components/SignInForm.js","pages/SignIn.js","services/firebase.js","validator/validate.js"],"sourcesContent":["import { signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport { auth } from \"../services/firebase\";\r\n\r\nconst authenticate = async (email, password) => {\r\n  const response = {};\r\n  try {\r\n    const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n    const user = userCredential.user;\r\n    response.user = user;\r\n  } catch (error) {\r\n    response.error = error;\r\n  }\r\n  return response;\r\n}\r\n\r\nexport default authenticate;\r\n","import { Link, useNavigate } from \"react-router-dom\";\r\nimport validate from \"../validator/validate\";\r\nimport { PAGE } from \"../router/routes\";\r\nimport { useState } from \"react\";\r\nimport authenticate from \"../auth/authenticate\";\r\n\r\nconst SignInForm = () => {\r\n  const [loadingBtn, setLoadingBtn] = useState(false);\r\n  const [authError, setAuthError] = useState(null);\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n\r\n  const [emailPhone, setEmailPhone] = useState('netflix@demo.com');\r\n  const [password, setPassword] = useState('Netflix@123');\r\n  const navigate = useNavigate();\r\n\r\n  const handleEmailPhone = (event) => {\r\n    setEmailPhone(event.target.value);\r\n  };\r\n\r\n  const handlePassword = (event) => {\r\n    setPassword(event.target.value);\r\n  };\r\n\r\n  const handleSignIn = async () => {\r\n    // Client side validation\r\n    const isError = validate(\r\n      emailPhone,\r\n      password\r\n    );\r\n    setErrorMessage(isError);\r\n    if (isError) return;\r\n    setLoadingBtn(true);\r\n\r\n    // Send provided credential to server for validation\r\n    const userCredential = await authenticate(emailPhone, password);\r\n    let errorMessage = null;\r\n    switch (userCredential?.error?.code) {\r\n      case \"auth/user-disabled\":\r\n        errorMessage = \"Your account has been disabled!\"\r\n        break;\r\n\r\n      case \"auth/invalid-login-credentials\":\r\n        errorMessage = \"Invalid login credentials.\"\r\n        break;\r\n\r\n      default:\r\n        errorMessage = \"Something went wrong with your credentials.\"\r\n        break;\r\n    }\r\n    setAuthError(errorMessage);\r\n    setLoadingBtn(false)\r\n\r\n    if (userCredential?.error) return;\r\n    navigate(PAGE.BROWSE);\r\n  }\r\n\r\n  return (\r\n    <div className='bg-black/70 w-full sm:w-[450px] m-auto px-6 md:px-16 py-8 md:py-12 mx-4 sm:mx-auto flex items-center rounded-lg'>\r\n      <div className=\"w-full\">\r\n        <h1 className=\"mb-5 text-white text-3xl\">Sign In</h1>\r\n        {authError && (\r\n          <div className=\"p-3 bg-[#e87c03] text-white text-xs rounded-md mb-5\">{authError}</div>\r\n        )}\r\n        <div className=\"mb-2 text-white\">\r\n          <input type=\"text\" value={emailPhone} onChange={handleEmailPhone} placeholder=\"Enter Email\" autoComplete=\"username\" className={`px-4 py-4 w-full text-white bg-[#333] border-b-2 rounded-[4px] focus:bg-[#4d4c4c] focus-visible:outline-none text-sm ${errorMessage?.emailPhone ? 'border-[#e87c03]' : 'border-transparent'}`} />\r\n          <div className=\"error px-1 py-2 text-[#e87c03] text-xs\">{errorMessage?.emailPhone}</div>\r\n        </div>\r\n        <form onSubmit={(e) => e.preventDefault()}>\r\n          <div className=\"mb-2 text-white\">\r\n            <input type=\"password\" value={password} onChange={handlePassword} placeholder=\"Password\" autoComplete=\"password\" className={`px-4 py-4 w-full text-white bg-[#333] border-b-2 rounded-[4px] focus:bg-[#4d4c4c] focus-visible:outline-none text-sm ${errorMessage?.password ? 'border-[#e87c03]' : 'border-transparent'}`} />\r\n            <div className=\"error px-1 py-2 text-[#e87c03] text-xs\">{errorMessage?.password}</div>\r\n          </div>\r\n          <div className=\"my-2\">\r\n            <button onClick={handleSignIn} disabled={loadingBtn ? true : false} className=\"flex items-center justify-center px-4 py-3 mt-4 bg-red-primary text-white w-full rounded-[4px] disabled:bg-red-800\">\r\n              {\r\n                loadingBtn ? <div className=\"w-5 h-5 border-t m-[2px] border-gray-300 border-solid rounded-full animate-spin\"></div> : 'Sign In'\r\n              }\r\n            </button>\r\n          </div>\r\n        </form>\r\n        <div className=\"flex items-center justify-between mt-3\">\r\n          <div className=\"flex gap-2 items-center\">\r\n            <input id=\"rememberPswrd\" type='checkbox' className=\"appearance-none rounded-sm w-4 h-4 bg-[#333] relative flex items-center justify-center checked:bg-[#4d4c4c] checked:text-white checked:before:content-['âœ“'] before:absolute \" />\r\n            <label htmlFor='rememberPswrd' className='text-xs cursor-pointer'>Remember Password</label>\r\n          </div>\r\n          <div className='help'>\r\n            <a href='#!' className='text-xs hover:underline'>Need Help?</a>\r\n          </div>\r\n        </div>\r\n        <div className=\"text-md mt-8 flex items-center gap-2\">\r\n          <span className='text-sm'>\r\n            New to NetflixGPT?\r\n          </span>\r\n          <Link to={PAGE.SIGNUP} className='text-white text-sm hover:underline'>Sign up now</Link>\r\n        </div>\r\n      </div >\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default SignInForm;\r\n","import SignInform from \"../components/SignInForm\";\r\nimport { POSTER_BG } from \"../utils/constants\";\r\n\r\nconst SignIn = () => {\r\n  return (\r\n    <div className=\"relative text-gray-500 min-h-screen\">\r\n      <div className=\"absolute -z-[1] min-h-screenf h-full\">\r\n        <img src={POSTER_BG} alt=\"NetflixGPT\" className=\"w-screen h-full object-cover\" />\r\n      </div>\r\n      <div className=\"flex items-center min-h-screen bg-black/60\">\r\n        <SignInform />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignIn;\r\n","import { getAuth } from \"firebase/auth\";\r\n// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAnalytics } from \"firebase/analytics\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyC_6XxavwSR0UP9DAK5If224D0RkJRxQXE\",\r\n  authDomain: \"netflixgpt-1c13a.firebaseapp.com\",\r\n  projectId: \"netflixgpt-1c13a\",\r\n  storageBucket: \"netflixgpt-1c13a.firebasestorage.app\",\r\n  messagingSenderId: \"50367864066\",\r\n  appId: \"1:50367864066:web:ea050986dbecd90710361b\",\r\n  measurementId: \"G-Y7D76GEPCW\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst analytics = getAnalytics(app);\r\n\r\n export const auth = getAuth();","const validate = (emailPhone, password, confirmPassword) => {\r\n  const errors = {};\r\n\r\n  const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n  const phoneRegex = /^[0-9]{10}$/;\r\n\r\n  if (!emailRegex.test(emailPhone) && !phoneRegex.test(emailPhone)) {\r\n    errors.emailPhone = 'Please enter a valid email address or phone number.';\r\n  }\r\n\r\n  if (!password) {\r\n    errors.password = 'Password password cannot be empty.';\r\n  } else {\r\n    if (password.length < 8 || password.length > 16) {\r\n      errors.password = 'Password must be between 8 and 16 characters.';\r\n    }\r\n    if (!/(?=.*[a-z])/.test(password)) {\r\n      errors.password = 'Password must contain at least one lowercase letter.';\r\n    }\r\n    if (!/(?=.*[A-Z])/.test(password)) {\r\n      errors.password = 'Password must contain at least one uppercase letter.';\r\n    }\r\n    if (!/(?=.*\\d)/.test(password)) {\r\n      errors.password = 'Password must contain at least one digit.';\r\n    }\r\n  }\r\n\r\n  if (confirmPassword !== undefined) {\r\n    const trimmedConfirmPassword = confirmPassword.trim();\r\n    if (trimmedConfirmPassword === '') {\r\n      errors.confirmPassword = 'Confirm password cannot be empty.';\r\n    } else if (trimmedConfirmPassword !== password) {\r\n      errors.confirmPassword = 'Passwords do not match.';\r\n    }\r\n  }\r\n\r\n  return Object.keys(errors).length === 0 ? null : errors;\r\n}\r\n\r\nexport default validate;\r\n"],"names":["async","email","password","response","user","signInWithEmailAndPassword","auth","error","SignInForm","loadingBtn","setLoadingBtn","useState","authError","setAuthError","errorMessage","setErrorMessage","emailPhone","setEmailPhone","setPassword","navigate","useNavigate","_jsx","className","children","_jsxs","type","value","onChange","event","target","placeholder","autoComplete","concat","onSubmit","e","preventDefault","onClick","_userCredential$error","isError","validate","userCredential","authenticate","code","PAGE","BROWSE","disabled","id","htmlFor","href","Link","to","SIGNUP","SignIn","src","POSTER_BG","alt","SignInform","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getAnalytics","getAuth","confirmPassword","errors","test","length","undefined","trimmedConfirmPassword","trim","Object","keys"],"sourceRoot":""}